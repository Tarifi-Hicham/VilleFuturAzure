{
	"name": "dataflow1",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "DimDateDS",
						"type": "DatasetReference"
					},
					"name": "DimDate"
				},
				{
					"dataset": {
						"referenceName": "DimRegionDS",
						"type": "DatasetReference"
					},
					"name": "DimRegion"
				},
				{
					"dataset": {
						"referenceName": "FactWeatherDS",
						"type": "DatasetReference"
					},
					"name": "FactWheather"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "AzureSqlTableDimDate",
						"type": "DatasetReference"
					},
					"name": "DimDateOutput"
				},
				{
					"dataset": {
						"referenceName": "AzureSqlTableDimRegion",
						"type": "DatasetReference"
					},
					"name": "DimRegionOutput"
				},
				{
					"dataset": {
						"referenceName": "AzureSqlTableFactWheather",
						"type": "DatasetReference"
					},
					"name": "FactWheatherOutput"
				}
			],
			"transformations": [],
			"scriptLines": [
				"source(output(",
				"          DateID as integer,",
				"          Date as date 'yyyy-MM-dd'",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> DimDate",
				"source(output(",
				"          RegionID as integer,",
				"          RegionName as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> DimRegion",
				"source(output(",
				"          DateID as integer,",
				"          RegionID as integer,",
				"          AverageTemperature as integer,",
				"          Humidity as integer,",
				"          WindSpeed as integer,",
				"          Rainfall as integer,",
				"          SunshineHours as integer",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> FactWheather",
				"DimDate sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     input(",
				"          DateID as integer,",
				"          Date as date",
				"     ),",
				"     deletable:false,",
				"     insertable:true,",
				"     updateable:false,",
				"     upsertable:false,",
				"     format: 'table',",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     errorHandlingOption: 'stopOnFirstError') ~> DimDateOutput",
				"DimRegion sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     input(",
				"          RegionID as integer,",
				"          Region as string",
				"     ),",
				"     deletable:false,",
				"     insertable:true,",
				"     updateable:false,",
				"     upsertable:false,",
				"     format: 'table',",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     errorHandlingOption: 'stopOnFirstError') ~> DimRegionOutput",
				"FactWheather sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     input(",
				"          DateID as integer,",
				"          RegionID as integer,",
				"          AverageTemperature as integer,",
				"          Humidity as integer,",
				"          WindSpeed as integer,",
				"          Rainfall as integer,",
				"          SunshineHours as integer",
				"     ),",
				"     deletable:false,",
				"     insertable:true,",
				"     updateable:false,",
				"     upsertable:false,",
				"     format: 'table',",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     errorHandlingOption: 'stopOnFirstError') ~> FactWheatherOutput"
			]
		}
	}
}